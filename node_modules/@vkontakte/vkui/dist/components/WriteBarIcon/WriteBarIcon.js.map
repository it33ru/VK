{"version":3,"sources":["../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"names":["WriteBarIcon","props","platform","mode","className","children","count","restProps","childrenResolved","IOS","disabled"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AAkBO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,CAACC,KAAD,EAAW;AAAA;;AAC5D,MAAMC,QAAQ,GAAG,+BAAjB;AAD4D,MAG1DC,IAH0D,GAQxDF,KARwD,CAG1DE,IAH0D;AAAA,MAI1DC,SAJ0D,GAQxDH,KARwD,CAI1DG,SAJ0D;AAAA,MAK1DC,QAL0D,GAQxDJ,KARwD,CAK1DI,QAL0D;AAAA,MAM1DC,KAN0D,GAQxDL,KARwD,CAM1DK,KAN0D;AAAA,MAOvDC,SAPuD,0CAQxDN,KARwD;AAU5D,MAAIO,gBAAJ;;AAEA,UAAQL,IAAR;AACE,SAAK,QAAL;AACEK,MAAAA,gBAAgB,GAAGN,QAAQ,KAAKO,aAAb,gBAAmB,6BAAC,6BAAD,OAAnB,gBAAgD,6BAAC,0BAAD,OAAnE;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,gBAAgB,GAAGN,QAAQ,KAAKO,aAAb,gBAAmB,6BAAC,yBAAD,OAAnB,gBAA4C,6BAAC,iBAAD,OAA/D;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,gBAAgB,GAAGN,QAAQ,KAAKO,aAAb,gBAAmB,6BAAC,yBAAD,OAAnB,gBAA4C,6BAAC,+BAAD,OAA/D;AACA;;AAEF;AACED,MAAAA,gBAAgB,GAAGH,QAAnB;AAdJ;;AAiBA,sBACE,kEACME,SADN;AAEE,IAAA,SAAS,EAAE,6BAAW,gCAAa,cAAb,EAA6BL,QAA7B,CAAX,wFACSC,IADT,GACkB,CAAC,CAACA,IADpB,8CAET,wBAFS,EAEiBI,SAAS,CAACG,QAF3B,iBAGRN,SAHQ;AAFb,MAOGI,gBAPH,EAQGF,KAAK,gBACJ;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,6BAAC,gBAAD;AAAS,IAAA,MAAM,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAC;AAAhC,KAAqCA,KAArC,CADF,CADI,GAIJ,IAZJ,CADF;AAiBD,CA9CM","sourcesContent":["import React, { ButtonHTMLAttributes, FC, ReactNode } from 'react';\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { IOS } from '../../lib/platform';\nimport Caption from '../Typography/Caption/Caption';\n\nexport interface WriteBarIconProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n}\n\nexport const WriteBarIcon: FC<WriteBarIconProps> = (props) => {\n  const platform = usePlatform();\n  const {\n    mode,\n    className,\n    children,\n    count,\n    ...restProps\n  } = props;\n\n  let childrenResolved: ReactNode;\n\n  switch (mode) {\n    case 'attach':\n      childrenResolved = platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      break;\n\n    case 'send':\n      childrenResolved = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      break;\n\n    case 'done':\n      childrenResolved = platform === IOS ? <Icon48WritebarDone /> : <Icon28CheckCircleOutline />;\n      break;\n\n    default:\n      childrenResolved = children;\n  }\n\n  return (\n    <button\n      {...restProps}\n      className={classNames(getClassName('WriteBarIcon', platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n        'WriteBarIcon--disabled': restProps.disabled,\n      }, className)}\n    >\n      {childrenResolved}\n      {count ?\n        <div className=\"WriteBarIcon__count\">\n          <Caption weight=\"regular\" level=\"2\">{count}</Caption>\n        </div> :\n        null\n      }\n    </button>\n  );\n};\n"],"file":"WriteBarIcon.js"}