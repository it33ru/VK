{"version":3,"sources":["../../../src/components/PopoutWrapper/PopoutWrapper.tsx"],"names":["PopoutWrapper","props","e","animationName","setState","opened","preventDefault","state","elRef","React","createRef","canUseDOM","window","addEventListener","preventTouch","passive","waitAnimationFinish","current","onFadeInEnd","removeEventListener","clearTimeout","animationFinishTimeout","elem","eventHandler","animationEvent","supported","name","setTimeout","platform","ANDROID","alignY","alignX","closing","children","hasMask","className","restProps","baseClassNames","Component"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, MouseEvent } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { ANDROID } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface PopoutWrapperProps extends HTMLAttributes<HTMLDivElement>, HasPlatform {\n  hasMask?: boolean;\n  alignY?: 'top' | 'center' | 'bottom';\n  alignX?: 'left' | 'center' | 'right';\n  closing?: boolean;\n}\n\nexport interface PopoutWrapperState {\n  opened: boolean;\n}\n\nexport type WindowTouchListener = (e: Event) => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nexport type ClickHandler = (e: MouseEvent<HTMLDivElement>) => void;\n\nclass PopoutWrapper extends Component<PopoutWrapperProps, PopoutWrapperState> {\n  constructor(props: PopoutWrapperProps) {\n    super(props);\n    this.state = {\n      opened: false,\n    };\n    this.elRef = React.createRef();\n  }\n\n  static defaultProps: PopoutWrapperProps = {\n    hasMask: true,\n    alignY: 'center',\n    alignX: 'center',\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('touchmove', this.preventTouch, { passive: false });\n      this.waitAnimationFinish(this.elRef.current, this.onFadeInEnd);\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n      window.removeEventListener('touchmove', this.preventTouch, { passive: false });\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  waitAnimationFinish(elem: HTMLDivElement, eventHandler: AnimationEndCallback) {\n    if (animationEvent.supported) {\n      elem.removeEventListener(animationEvent.name, eventHandler);\n      elem.addEventListener(animationEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.animationFinishTimeout);\n      this.animationFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID ? 200 : 300);\n    }\n  }\n\n  onFadeInEnd: AnimationEndCallback = (e: AnimationEvent) => {\n    if (!e || e.animationName === 'animation-full-fade-in') {\n      this.setState({ opened: true });\n    }\n  };\n\n  preventTouch: WindowTouchListener = (e: Event) => e.preventDefault();\n\n  render() {\n    const { alignY, alignX, closing, children, hasMask, className, platform, ...restProps } = this.props;\n    const baseClassNames = getClassName('PopoutWrapper', platform);\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(baseClassNames, `PopoutWrapper--v-${alignY}`, `PopoutWrapper--h-${alignX}`, {\n          'PopoutWrapper--closing': closing,\n          'PopoutWrapper--opened': this.state.opened,\n        }, className)}\n        ref={this.elRef}\n      >\n        {hasMask && <div className=\"PopoutWrapper__mask\" />}\n        <div className=\"PopoutWrapper__container\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(PopoutWrapper);\n"],"file":"PopoutWrapper.js"}