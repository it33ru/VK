{"version":3,"sources":["../../../src/components/Header/Header.tsx"],"names":["Header","className","mode","children","subtitle","indicator","aside","getRootRef","restProps","platform","baseClassNames","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AASA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,OAS5B;AAAA,MARjBC,SAQiB,QARjBA,SAQiB;AAAA,MAPjBC,IAOiB,QAPjBA,IAOiB;AAAA,MANjBC,QAMiB,QANjBA,QAMiB;AAAA,MALjBC,QAKiB,QALjBA,QAKiB;AAAA,MAJjBC,SAIiB,QAJjBA,SAIiB;AAAA,MAHjBC,KAGiB,QAHjBA,KAGiB;AAAA,MAFjBC,UAEiB,QAFjBA,UAEiB;AAAA,MADdC,SACc;AACjB,MAAMC,QAAQ,GAAG,+BAAjB;AACA,MAAMC,cAAc,GAAG,gCAAa,QAAb,EAAuBD,QAAvB,CAAvB;AAEA,sBACE,+DACMD,SADN;AAEE,IAAA,GAAG,EAAED,UAFP;AAGE,IAAA,SAAS,EAAE,4BAAWG,cAAX,EAA2BT,SAA3B,yBAAsDC,IAAtD,GAA8D;AACvE,oBAAc,iCAAqBG,SAArB;AADyD,KAA9D;AAHb,mBAOE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGF,QADH,EAEG,yBAAaC,QAAb,kBAA0B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,QAAnC,CAF7B,CADF,EAKG,yBAAaC,SAAb,kBAA2B;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,SAApC,CAL9B,EAMG,yBAAaC,KAAb,kBAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAgCA,KAAhC,CAN1B,CAPF,CADF;AAkBD,CA/BD;;AAiCAN,MAAM,CAACW,YAAP,GAAsB;AACpBT,EAAAA,IAAI,EAAE;AADc,CAAtB;eAIeF,M","sourcesContent":["import React, { FunctionComponent, HTMLAttributes, ReactNode } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { HasRootRef } from '../../types';\nimport { hasReactNode, isPrimitiveReactNode } from '../../lib/utils';\n\nexport interface HeaderProps extends HTMLAttributes<HTMLDivElement>, HasRootRef<HTMLDivElement> {\n  mode?: 'primary' | 'secondary';\n  subtitle?: ReactNode;\n  aside?: ReactNode;\n  indicator?: ReactNode;\n}\n\nconst Header: FunctionComponent<HeaderProps> = ({\n  className,\n  mode,\n  children,\n  subtitle,\n  indicator,\n  aside,\n  getRootRef,\n  ...restProps\n}: HeaderProps) => {\n  const platform = usePlatform();\n  const baseClassNames = getClassName('Header', platform);\n\n  return (\n    <div\n      {...restProps}\n      ref={getRootRef}\n      className={classNames(baseClassNames, className, `Header--mode-${mode}`, {\n        'Header--pi': isPrimitiveReactNode(indicator),\n      })}\n    >\n      <div className=\"Header__in\">\n        <div className=\"Header__content\">\n          {children}\n          {hasReactNode(subtitle) && <div className=\"Header__subtitle\">{subtitle}</div>}\n        </div>\n        {hasReactNode(indicator) && <div className=\"Header__indicator\">{indicator}</div>}\n        {hasReactNode(aside) && <div className=\"Header__aside\">{aside}</div>}\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  mode: 'primary',\n};\n\nexport default Header;\n"],"file":"Header.js"}