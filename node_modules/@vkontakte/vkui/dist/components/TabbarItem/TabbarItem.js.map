{"version":3,"sources":["../../../src/components/TabbarItem/TabbarItem.tsx"],"names":["TabbarItem","props","className","children","selected","label","text","restProps","platform","Component","href"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAeA,IAAMA,UAA8C,GAAG,SAAjDA,UAAiD,CAACC,KAAD,EAA4B;AAAA,MACzEC,SADyE,GACZD,KADY,CACzEC,SADyE;AAAA,MAC9DC,QAD8D,GACZF,KADY,CAC9DE,QAD8D;AAAA,MACpDC,QADoD,GACZH,KADY,CACpDG,QADoD;AAAA,MAC1CC,KAD0C,GACZJ,KADY,CAC1CI,KAD0C;AAAA,MACnCC,IADmC,GACZL,KADY,CACnCK,IADmC;AAAA,MAC1BC,SAD0B,0CACZN,KADY;AAEjF,MAAMO,QAAQ,GAAG,2BAAjB;AACA,MAAMC,SAAsB,GAAGF,SAAS,CAACG,IAAV,GAAiB,GAAjB,GAAuB,KAAtD;AAEA,sBACE,6BAAC,SAAD,6BACMH,SADN;AAEE,IAAA,SAAS,EAAE,yBAAW,2BAAa,YAAb,EAA2BC,QAA3B,CAAX,EAAiDN,SAAjD,EAA4D;AACrE,8BAAwBE,QAD6C;AAErE,0BAAoB,CAAC,CAACE;AAF+C,KAA5D;AAFb,mBAOE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,QADH,EAEGE,KAAK,iBAAI,6BAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAuC,IAAA,IAAI,EAAC,GAA5C;AAAgD,IAAA,IAAI,EAAC;AAArD,KAAkEA,KAAlE,CAFZ,CADF,EAKGC,IAAI,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,IAAnC,CALX,CAPF,CADF;AAiBD,CAtBD;;eAwBeN,U","sourcesContent":["import React, { FunctionComponent, ReactNode, HTMLAttributes, ElementType } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Counter from '../Counter/Counter';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasLinkProps } from '../../types';\n\nexport interface TabbarItemProps extends HTMLAttributes<HTMLElement>, HasLinkProps {\n  selected?: boolean;\n  /**\n   * Тест рядом с иконкой\n   */\n  text?: ReactNode;\n  /**\n   * Счетчик рядом с иконкой\n   */\n  label?: ReactNode;\n}\n\nconst TabbarItem: FunctionComponent<TabbarItemProps> = (props: TabbarItemProps) => {\n  const { className, children, selected, label, text, ...restProps } = props;\n  const platform = usePlatform();\n  const Component: ElementType = restProps.href ? 'a' : 'div';\n\n  return (\n    <Component\n      {...restProps}\n      className={classNames(getClassName('TabbarItem', platform), className, {\n        'TabbarItem--selected': selected,\n        'TabbarItem--text': !!text,\n      })}\n    >\n      <div className=\"TabbarItem__in\">\n        <div className=\"TabbarItem__icon\">\n          {children}\n          {label && <Counter className=\"TabbarItem__label\" size=\"s\" mode=\"prominent\">{label}</Counter>}\n        </div>\n        {text && <div className=\"TabbarItem__text\">{text}</div>}\n      </div>\n    </Component>\n  );\n};\n\nexport default TabbarItem;\n"],"file":"TabbarItem.js"}