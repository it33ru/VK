"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MiniInfoCell = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _classNames2 = _interopRequireDefault(require("../../lib/classNames"));

var _usePlatform = _interopRequireDefault(require("../../hooks/usePlatform"));

var _getClassName = _interopRequireDefault(require("../../helpers/getClassName"));

var _Text = _interopRequireDefault(require("../Typography/Text/Text"));

var _Tappable = _interopRequireDefault(require("../../components/Tappable/Tappable"));

var _utils = require("../../lib/utils");

var MiniInfoCell = function MiniInfoCell(props) {
  var _classNames;

  var platform = (0, _usePlatform.default)();
  var before = props.before,
      after = props.after,
      mode = props.mode,
      textWrap = props.textWrap,
      textLevel = props.textLevel,
      multiline = props.multiline,
      children = props.children,
      className = props.className,
      restProps = (0, _objectWithoutProperties2.default)(props, ["before", "after", "mode", "textWrap", "textLevel", "multiline", "children", "className"]);
  var Component = restProps.onClick ? _Tappable.default : 'div';
  var finalTextWrap = multiline ? 'short' : textWrap;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({}, restProps, {
    className: (0, _classNames2.default)((0, _getClassName.default)('MiniInfoCell', platform), (_classNames = {}, (0, _defineProperty2.default)(_classNames, "MiniInfoCell--md-".concat(mode), mode !== 'base'), (0, _defineProperty2.default)(_classNames, "MiniInfoCell--wr-".concat(finalTextWrap), finalTextWrap !== 'nowrap'), _classNames), "MiniInfoCell--lvl-".concat(textLevel), className)
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "MiniInfoCell__icon"
  }, before), /*#__PURE__*/_react.default.createElement(_Text.default, {
    className: "MiniInfoCell__content",
    weight: mode === 'more' ? 'medium' : 'regular'
  }, children), (0, _utils.hasReactNode)(after) && /*#__PURE__*/_react.default.createElement("div", {
    className: "MiniInfoCell__after"
  }, after));
};

exports.MiniInfoCell = MiniInfoCell;
MiniInfoCell.defaultProps = {
  mode: 'base',
  textWrap: 'nowrap',
  textLevel: 'secondary'
};
//# sourceMappingURL=MiniInfoCell.js.map