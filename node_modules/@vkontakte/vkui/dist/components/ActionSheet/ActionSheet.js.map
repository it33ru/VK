{"version":3,"sources":["../../../src/components/ActionSheet/ActionSheet.tsx"],"names":["ActionSheet","props","closing","setState","waitTransitionFinish","onClose","action","autoclose","event","persist","e","stopPropagation","index","childrenArray","Children","toArray","children","lastElement","length","mode","elRef","React","createRef","eventHandler","transitionEvent","supported","current","removeEventListener","name","addEventListener","clearTimeout","transitionFinishTimeout","setTimeout","platform","ANDROID","className","header","text","style","insets","restProps","state","IOS","map","child","arr","cloneElement","onClick","onItemClick","bottom","marginBottom","isLast","isItemLast","Component"],"mappings":"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","sourcesContent":["import React, { Children, Component, HTMLAttributes, ReactElement } from 'react';\nimport PopoutWrapper from '../PopoutWrapper/PopoutWrapper';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform } from '../../types';\nimport { ANDROID, IOS } from '../../lib/platform';\n\nexport interface ActionSheetProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, HasInsets {\n  /**\n   * iOS only\n   */\n  header?: React.ReactNode;\n  /**\n   * iOS only\n   */\n  text?: React.ReactNode;\n  onClose(): void;\n}\n\nexport interface ActionSheetState {\n  closing: boolean;\n}\n\nexport type CloseCallback = () => void;\n\nexport type ClickHandler = (event: React.MouseEvent<HTMLDivElement>) => void;\n\nexport type ActionType = (event: React.MouseEvent) => void;\n\nexport type ItemClickHandler = (action: ActionType, autoclose: boolean) => (event: React.MouseEvent) => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nexport type IsItemLast = (index: number) => boolean;\n\nclass ActionSheet extends Component<ActionSheetProps, ActionSheetState> {\n  constructor(props: ActionSheetProps) {\n    super(props);\n    this.elRef = React.createRef();\n  }\n\n  state: ActionSheetState = {\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private transitionFinishTimeout: ReturnType<typeof setTimeout>;\n\n  onClose: CloseCallback = () => {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.props.onClose);\n  };\n\n  onItemClick: ItemClickHandler = (action: ActionType, autoclose: boolean) => (event: React.MouseEvent) => {\n    event.persist();\n\n    if (autoclose) {\n      this.setState({ closing: true });\n      this.waitTransitionFinish(() => {\n        autoclose && this.props.onClose();\n        action && action(event);\n      });\n    } else {\n      action && action(event);\n    }\n  };\n\n  stopPropagation: ClickHandler = (e: React.MouseEvent<HTMLDivElement>) => e.stopPropagation();\n\n  waitTransitionFinish(eventHandler: AnimationEndCallback) {\n    if (transitionEvent.supported) {\n      this.elRef.current.removeEventListener(transitionEvent.name, eventHandler);\n      this.elRef.current.addEventListener(transitionEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.transitionFinishTimeout);\n      this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID ? 200 : 300);\n    }\n  }\n\n  isItemLast: IsItemLast = (index: number) => {\n    const childrenArray = Children.toArray(this.props.children);\n    const lastElement = childrenArray[childrenArray.length - 1] as ReactElement;\n\n    if (index === childrenArray.length - 1) {\n      return true;\n    } else if (index === childrenArray.length - 2 && lastElement.props.mode === 'cancel') {\n      return true;\n    }\n\n    return false;\n  };\n\n  render() {\n    const { children, className, header, text, style, insets, platform, ...restProps } = this.props;\n\n    return (\n      <PopoutWrapper\n        closing={this.state.closing}\n        alignY=\"bottom\"\n        className={className}\n        style={style}\n        onClick={this.onClose}\n      >\n        <div\n          {...restProps}\n          ref={this.elRef}\n          onClick={this.stopPropagation}\n          className={classNames(getClassName('ActionSheet', platform), {\n            'ActionSheet--closing': this.state.closing,\n          })}\n        >\n          {platform === IOS &&\n          <header className=\"ActionSheet__header\">\n            {header && <div className=\"ActionSheet__title\">{header}</div>}\n            {text && <div className=\"ActionSheet__text\">{text}</div>}\n          </header>\n          }\n          {Children.toArray(children).map((child: React.ReactElement, index: number, arr: []) =>\n            child && React.cloneElement(child, {\n              onClick: this.onItemClick(child.props.onClick, child.props.autoclose),\n              style: index === arr.length - 1 && isNumeric(insets.bottom) ? { marginBottom: insets.bottom } : null,\n              isLast: this.isItemLast(index),\n            }),\n          )}\n        </div>\n      </PopoutWrapper>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(ActionSheet));\n"],"file":"ActionSheet.js"}