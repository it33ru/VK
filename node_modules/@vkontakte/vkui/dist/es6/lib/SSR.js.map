{"version":3,"sources":["../../../src/lib/SSR.tsx"],"names":["React","createContext","platform","SSRContext","userAgent","SSRWrapper","props","children","contextValue"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAyC,OAAzC;AACA,SAAiBC,QAAjB,QAAiC,YAAjC;AAOA,OAAO,IAAMC,UAAU,gBAAGF,aAAa,CAAsB;AAC3DC,EAAAA,QAAQ,EAAE,IADiD;AAE3DE,EAAAA,SAAS,EAAE;AAFgD,CAAtB,CAAhC;AASP,OAAO,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,CAACC,KAAD,EAAW;AAAA,MAChDF,SADgD,GACxBE,KADwB,CAChDF,SADgD;AAAA,MACrCG,QADqC,GACxBD,KADwB,CACrCC,QADqC,EAGxD;;AACA,MAAMC,YAAY,GAAG;AACnBN,IAAAA,QAAQ,EAAEA,QAAQ,CAACE,SAAD,CADC;AAEnBA,IAAAA,SAAS,EAATA;AAFmB,GAArB;AAKA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEI;AAA5B,KACGD,QADH,CADF;AAKD,CAdM","sourcesContent":["import React, { createContext, FC } from 'react';\nimport { OSType, platform } from './platform';\n\nexport interface SSRContextInterface {\n  platform: OSType;\n  userAgent?: string;\n}\n\nexport const SSRContext = createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: '',\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n}\n\nexport const SSRWrapper: FC<SSRWrapperProps> = (props) => {\n  const { userAgent, children } = props;\n\n  // TODO: Каждый раз создаётся новый объект для контекста – плохо\n  const contextValue = {\n    platform: platform(userAgent),\n    userAgent,\n  };\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      {children}\n    </SSRContext.Provider>\n  );\n};\n"],"file":"SSR.js"}