import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';
import classNames from '../../lib/classNames';
import usePlatform from '../../hooks/usePlatform';
import getClassName from '../../helpers/getClassName';
import Tappable from '../Tappable/Tappable';
import { hasReactNode, isPrimitiveReactNode } from '../../lib/utils';

var RichCell = function RichCell(_ref) {
  var children = _ref.children,
      text = _ref.text,
      caption = _ref.caption,
      before = _ref.before,
      after = _ref.after,
      bottom = _ref.bottom,
      actions = _ref.actions,
      multiline = _ref.multiline,
      className = _ref.className,
      restProps = _objectWithoutProperties(_ref, ["children", "text", "caption", "before", "after", "bottom", "actions", "multiline", "className"]);

  var platform = usePlatform();
  var isAfterPrimitive = isPrimitiveReactNode(after);
  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {
    Component: restProps.href ? 'a' : 'div',
    className: classNames(className, getClassName('RichCell', platform), {
      'RichCell--mult': multiline
    })
  }), before, /*#__PURE__*/React.createElement("div", {
    className: "RichCell__in"
  }, /*#__PURE__*/React.createElement("div", {
    className: "RichCell__top"
  }, isAfterPrimitive ? /*#__PURE__*/React.createElement("span", null, after) : after, /*#__PURE__*/React.createElement("div", {
    className: "RichCell__content"
  }, /*#__PURE__*/React.createElement("div", {
    className: "RichCell__children"
  }, children), hasReactNode(after) && /*#__PURE__*/React.createElement("div", {
    className: "RichCell__after"
  }, after)), hasReactNode(text) && /*#__PURE__*/React.createElement("div", {
    className: "RichCell__text"
  }, text), hasReactNode(caption) && /*#__PURE__*/React.createElement("div", {
    className: "RichCell__caption"
  }, caption), (hasReactNode(bottom) || hasReactNode(actions)) && /*#__PURE__*/React.createElement("div", {
    className: "RichCell__bottom"
  }, bottom, hasReactNode(actions) && /*#__PURE__*/React.createElement("div", {
    className: "RichCell__actions"
  }, actions)))));
};

export default RichCell;
//# sourceMappingURL=RichCell.js.map