{"version":3,"sources":["../../../../src/components/ModalCard/ModalCard.tsx"],"names":["React","Button","PanelHeaderButton","getClassName","classNames","withInsets","Icon24Dismiss","IOS","hasReactNode","isNumeric","withPlatform","Subhead","Title","ModalCard","props","insets","icon","header","caption","children","actions","actionsLayout","onClose","platform","className","onButtonClick","event","target","currentTarget","action","Number","dataset","index","persist","canShowCloseBtn","bottom","marginBottom","length","map","i","title","mode","defaultProps"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, MouseEventHandler, ReactNode, MouseEvent, FC } from 'react';\nimport Button from '../Button/Button';\nimport PanelHeaderButton from '../PanelHeaderButton/PanelHeaderButton';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\nimport { IOS } from '../../lib/platform';\nimport { hasReactNode, isNumeric } from '../../lib/utils';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasChildren, HasInsets, HasPlatform } from '../../types';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Title from '../Typography/Title/Title';\n\nexport interface ModalCardActionInterface {\n  title: string;\n  action?(event: MouseEvent): void;\n  mode?: 'secondary' | 'primary';\n}\n\nexport interface ModalCardProps extends HTMLAttributes<HTMLElement>, HasPlatform, HasChildren, HasInsets {\n  /**\n   * Иконка.\n   *\n   * Может быть компонентом иконки, например, `<Icon56MoneyTransferOutline />`, или `<Avatar size={72} src=\"\" />`\n   */\n  icon?: ReactNode;\n\n  /**\n   * Заголовок карточки\n   */\n  header?: ReactNode;\n\n  /**\n   * Подзаголовок\n   */\n  caption?: ReactNode;\n\n  /**\n   * Список кнопок-действий\n   */\n  actions?: ModalCardActionInterface[];\n\n  /**\n   * Тип отображения кнопок: вертикальный или горизонтальный\n   */\n  actionsLayout?: 'vertical' | 'horizontal';\n\n  /**\n   * Будет вызван при закрытии карточки жестом\n   */\n  onClose?(): void;\n}\n\nconst ModalCard: FC<ModalCardProps> = (props) => {\n  const {\n    insets,\n    icon,\n    header,\n    caption,\n    children,\n    actions,\n    actionsLayout,\n    onClose,\n    platform,\n    className,\n  } = props;\n\n  const onButtonClick: MouseEventHandler = (event: MouseEvent) => {\n    const target = event.currentTarget as HTMLButtonElement;\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const action = actions[Number(target.dataset.index)].action;\n    event.persist();\n\n    if (typeof action === 'function') {\n      action(event);\n    }\n  };\n\n  const canShowCloseBtn = platform === IOS;\n\n  return (\n    <div className={classNames(getClassName('ModalCard', platform), className)}>\n      <div className=\"ModalCard__in\">\n        <div className=\"ModalCard__container\" style={isNumeric(insets.bottom) ? { marginBottom: insets.bottom } : null}>\n          {hasReactNode(icon) && <div className=\"ModalCard__icon\">{icon}</div>}\n          {hasReactNode(header) && <Title level=\"2\" weight=\"semibold\" className=\"ModalCard__header\">{header}</Title>}\n          {hasReactNode(caption) && <Subhead weight=\"regular\" className=\"ModalCard__subheader\">{caption}</Subhead>}\n\n          {children}\n\n          {actions.length > 0 &&\n          <div className={classNames('ModalCard__actions', {\n            'ModalCard__actions--v': actionsLayout === 'vertical',\n          })}>\n            {actions.map(({ title, mode }: ModalCardActionInterface, i: number) => {\n              return (\n                <Button\n                  key={i}\n                  data-index={i}\n                  size=\"xl\"\n                  mode={mode}\n                  onClick={onButtonClick}\n                >\n                  {title}\n                </Button>\n              );\n            })}\n          </div>\n          }\n\n          {canShowCloseBtn &&\n          <PanelHeaderButton className=\"ModalCard__dismiss\" onClick={onClose}>\n            <Icon24Dismiss />\n          </PanelHeaderButton>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModalCard.defaultProps = {\n  actions: [],\n  actionsLayout: 'horizontal',\n  insets: {},\n};\n\nexport default withPlatform(withInsets(ModalCard));\n"],"file":"ModalCard.js"}