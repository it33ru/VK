import React from 'react';
import Button from '../Button/Button';
import PanelHeaderButton from '../PanelHeaderButton/PanelHeaderButton';
import getClassName from '../../helpers/getClassName';
import classNames from '../../lib/classNames';
import withInsets from '../../hoc/withInsets';
import Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';
import { IOS } from '../../lib/platform';
import { hasReactNode, isNumeric } from '../../lib/utils';
import withPlatform from '../../hoc/withPlatform';
import Subhead from '../Typography/Subhead/Subhead';
import Title from '../Typography/Title/Title';

var ModalCard = function ModalCard(props) {
  var insets = props.insets,
      icon = props.icon,
      header = props.header,
      caption = props.caption,
      children = props.children,
      actions = props.actions,
      actionsLayout = props.actionsLayout,
      onClose = props.onClose,
      platform = props.platform,
      className = props.className;

  var onButtonClick = function onButtonClick(event) {
    var target = event.currentTarget; // eslint-disable-next-line @typescript-eslint/unbound-method

    var action = actions[Number(target.dataset.index)].action;
    event.persist();

    if (typeof action === 'function') {
      action(event);
    }
  };

  var canShowCloseBtn = platform === IOS;
  return /*#__PURE__*/React.createElement("div", {
    className: classNames(getClassName('ModalCard', platform), className)
  }, /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__in"
  }, /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__container",
    style: isNumeric(insets.bottom) ? {
      marginBottom: insets.bottom
    } : null
  }, hasReactNode(icon) && /*#__PURE__*/React.createElement("div", {
    className: "ModalCard__icon"
  }, icon), hasReactNode(header) && /*#__PURE__*/React.createElement(Title, {
    level: "2",
    weight: "semibold",
    className: "ModalCard__header"
  }, header), hasReactNode(caption) && /*#__PURE__*/React.createElement(Subhead, {
    weight: "regular",
    className: "ModalCard__subheader"
  }, caption), children, actions.length > 0 && /*#__PURE__*/React.createElement("div", {
    className: classNames('ModalCard__actions', {
      'ModalCard__actions--v': actionsLayout === 'vertical'
    })
  }, actions.map(function (_ref, i) {
    var title = _ref.title,
        mode = _ref.mode;
    return /*#__PURE__*/React.createElement(Button, {
      key: i,
      "data-index": i,
      size: "xl",
      mode: mode,
      onClick: onButtonClick
    }, title);
  })), canShowCloseBtn && /*#__PURE__*/React.createElement(PanelHeaderButton, {
    className: "ModalCard__dismiss",
    onClick: onClose
  }, /*#__PURE__*/React.createElement(Icon24Dismiss, null)))));
};

ModalCard.defaultProps = {
  actions: [],
  actionsLayout: 'horizontal',
  insets: {}
};
export default withPlatform(withInsets(ModalCard));
//# sourceMappingURL=ModalCard.js.map