{"version":3,"sources":["../../../../src/components/Panel/Panel.tsx"],"names":["React","Component","PropTypes","getClassName","classNames","Touch","tabbarHeight","withInsets","withPlatform","isNumeric","PanelContext","IOS","Panel","container","getRootRef","props","current","panel","id","separator","className","centered","children","insets","platform","restProps","tabbarPadding","context","hasTabbar","getContext","getRef","paddingBottom","bottom","bool"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA8D,OAA9D;AACA,OAAOC,SAAP,MAAuC,YAAvC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,YAAT,QAAgD,gBAAhD;AACA,SAASC,GAAT,QAAoB,oBAApB;;IAYMC,K;;;;;;;;;;;;;;;;;;6DAuBkC,UAACC,SAAD,EAAe;AACnD,YAAKA,SAAL,GAAiBA,SAAjB;AAEA,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWD,UAA9B;;AACA,UAAIA,UAAJ,EAAgB;AACd,YAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AACpCA,UAAAA,UAAU,CAACD,SAAD,CAAV;AACD,SAFD,MAEO;AACLC,UAAAA,UAAU,CAACE,OAAX,GAAqBH,SAArB;AACD;AACF;AACF,K;;;;;;;iCApB+B;AAC9B,aAAO;AACLI,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,EADb;AAELC,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI;AAFjB,OAAP;AAID;;;6BAiBQ;AAAA,wBAC0F,KAAKJ,KAD/F;AAAA,UACCK,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,QADtB,eACsBA,QADtB;AAAA,UACgCC,MADhC,eACgCA,MADhC;AAAA,UACwCC,QADxC,eACwCA,QADxC;AAAA,UACkDL,SADlD,eACkDA,SADlD;AAAA,UAC6DL,UAD7D,eAC6DA,UAD7D;AAAA,UAC4EW,SAD5E;;AAEP,UAAMC,aAAa,GAAG,KAAKC,OAAL,CAAaC,SAAb,GAAyBtB,YAAzB,GAAwC,CAA9D;AAEA,0BACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE,KAAKuB,UAAL;AAA9B,sBACE,wCACMJ,SADN;AAEE,QAAA,GAAG,EAAE,KAAKK,MAFZ;AAGE,QAAA,SAAS,EAAE1B,UAAU,CAACD,YAAY,CAAC,OAAD,EAAUqB,QAAV,CAAb,EAAkCJ,SAAlC,EAA6C;AAChE,6BAAmBC;AAD6C,SAA7C;AAHvB,uBAOE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAE;AAClCU,UAAAA,aAAa,EAAEtB,SAAS,CAACc,MAAM,CAACS,MAAR,CAAT,GAA2BT,MAAM,CAACS,MAAP,GAAgBN,aAA3C,GAA2D;AADxC;AAApC,SAGGF,QAAQ,KAAKb,GAAb,iBAAoB;AAAK,QAAA,SAAS,EAAC;AAAf,QAHvB,eAIE;AAAK,QAAA,SAAS,EAAC;AAAf,QAJF,EAKGU,QAAQ,gBAAG;AAAK,QAAA,SAAS,EAAC;AAAf,SAAkCC,QAAlC,CAAH,GAAuDA,QALlE,eAME;AAAK,QAAA,SAAS,EAAC;AAAf,QANF,CAPF,CADF,CADF;AAoBD;;;;EA5DiBrB,S;;gBAAdW,K,kBACuC;AACzCU,EAAAA,QAAQ,EAAE,EAD+B;AAEzCD,EAAAA,QAAQ,EAAE,KAF+B;;AAGzC;;;AAGAF,EAAAA,SAAS,EAAE;AAN8B,C;;gBADvCP,K,kBAUgC;AAClCgB,EAAAA,SAAS,EAAE1B,SAAS,CAAC+B;AADa,C;;AAqDtC,eAAezB,YAAY,CAACD,UAAU,CAACK,KAAD,CAAX,CAA3B","sourcesContent":["import React, { Component, HTMLAttributes, RefCallback } from 'react';\nimport PropTypes, { Requireable } from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport withPlatform from '../../hoc/withPlatform';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform, HasRootRef } from '../../types';\nimport { PanelContext, PanelContextProps } from './PanelContext';\nimport { IOS } from '../../lib/platform';\n\nexport interface PanelProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, HasInsets, HasRootRef<HTMLDivElement> {\n  id: string;\n  separator?: boolean;\n  centered?: boolean;\n}\n\nexport interface PanelContext {\n  hasTabbar: Requireable<boolean>;\n}\n\nclass Panel extends Component<PanelProps> {\n  static defaultProps: Partial<PanelProps> = {\n    children: '',\n    centered: false,\n    /**\n     * @deprecated будет удалено в 4-й версии. Сепаратор теперь устанавливается в PanelHeader\n     */\n    separator: true,\n  };\n\n  static contextTypes: PanelContext = {\n    hasTabbar: PropTypes.bool,\n  };\n\n  getContext(): PanelContextProps {\n    return {\n      panel: this.props.id,\n      separator: this.props.separator,\n    };\n  }\n\n  container: HTMLDivElement;\n\n  getRef: RefCallback<HTMLDivElement> = (container) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render() {\n    const { className, centered, children, insets, platform, separator, getRootRef, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n\n    return (\n      <PanelContext.Provider value={this.getContext()}>\n        <div\n          {...restProps}\n          ref={this.getRef}\n          className={classNames(getClassName('Panel', platform), className, {\n            'Panel--centered': centered,\n          })}\n        >\n          <Touch className=\"Panel__in\" style={{\n            paddingBottom: isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null,\n          }}>\n            {platform === IOS && <div className=\"Panel__fade\" />}\n            <div className=\"Panel__in-before\" />\n            {centered ? <div className=\"Panel__centered\">{children}</div> : children}\n            <div className=\"Panel__in-after\" />\n          </Touch>\n        </div>\n      </PanelContext.Provider>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(Panel));\n"],"file":"Panel.js"}