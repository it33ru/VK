{"version":3,"sources":["../../../../src/components/SimpleCell/SimpleCell.tsx"],"names":["React","classNames","getClassName","Tappable","Icon24Chevron","IOS","usePlatform","hasReactNode","SimpleCell","before","indicator","children","after","description","className","expandable","multiline","restProps","platform","hasAfter","href"],"mappings":";;AAAA,OAAOA,KAAP,MAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AA2BA,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,OAUlC;AAAA,MATJC,MASI,QATJA,MASI;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADDC,SACC;;AACJ,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,QAAQ,GAAGZ,YAAY,CAACK,KAAD,CAAZ,IAAuBG,UAAU,IAAIG,QAAQ,KAAKb,GAAnE;AAEA,sBACE,oBAAC,QAAD,eACMY,SADN;AAEE,IAAA,SAAS,EAAEA,SAAS,CAACG,IAAV,GAAiB,GAAjB,GAAuB,KAFpC;AAGE,IAAA,SAAS,EACPnB,UAAU,CACRa,SADQ,EAERZ,YAAY,CAAC,YAAD,EAAegB,QAAf,CAFJ,EAGR;AACE,yBAAmBH,UADrB;AAEE,0BAAoBC;AAFtB,KAHQ;AAJd,MAcGP,MAdH,eAeE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCE,QAAvC,CADF,EAEGE,WAAW,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CA,WAA1C,CAFlB,CAfF,EAmBGN,YAAY,CAACG,SAAD,CAAZ,iBACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,SADH,CApBJ,EAwBGS,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,KADH,EAEGG,UAAU,IAAIG,QAAQ,KAAKb,GAA3B,iBAAkC,oBAAC,aAAD,OAFrC,CAzBJ,CADF;AAiCD,CA/CD;;AAiDA,eAAeG,UAAf","sourcesContent":["import React, { HTMLAttributes, ReactNode, FC } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\nimport { HasLinkProps, HasRootRef } from '../../types';\nimport { IOS } from '../../lib/platform';\nimport usePlatform from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\n\nexport interface SimpleCellProps extends HTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasLinkProps {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  description?: ReactNode;\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается кликабельность ячейки.\n   */\n  expandable?: boolean;\n  multiline?: boolean;\n}\n\nconst SimpleCell: FC<SimpleCellProps> = ({\n  before,\n  indicator,\n  children,\n  after,\n  description,\n  className,\n  expandable,\n  multiline,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || expandable && platform === IOS;\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? 'a' : 'div'}\n      className={\n        classNames(\n          className,\n          getClassName('SimpleCell', platform),\n          {\n            'SimpleCell--exp': expandable,\n            'SimpleCell--mult': multiline,\n          },\n        )\n      }\n    >\n      {before}\n      <div className=\"SimpleCell__main\">\n        <div className=\"SimpleCell__children\">{children}</div>\n        {description && <div className=\"SimpleCell__description\">{description}</div>}\n      </div>\n      {hasReactNode(indicator) &&\n        <div className=\"SimpleCell__indicator\">\n          {indicator}\n        </div>\n      }\n      {hasAfter &&\n        <div className=\"SimpleCell__after\">\n          {after}\n          {expandable && platform === IOS && <Icon24Chevron />}\n        </div>\n      }\n    </Tappable>\n  );\n};\n\nexport default SimpleCell;\n"],"file":"SimpleCell.js"}