{"version":3,"sources":["../../../../src/components/PopoutWrapper/PopoutWrapper.tsx"],"names":["React","Component","getClassName","classNames","ANDROID","animationEvent","withPlatform","canUseDOM","PopoutWrapper","props","e","animationName","setState","opened","preventDefault","state","elRef","createRef","window","addEventListener","preventTouch","passive","waitAnimationFinish","current","onFadeInEnd","removeEventListener","clearTimeout","animationFinishTimeout","elem","eventHandler","supported","name","setTimeout","platform","alignY","alignX","closing","children","hasMask","className","restProps","baseClassNames"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, MouseEvent } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { ANDROID } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface PopoutWrapperProps extends HTMLAttributes<HTMLDivElement>, HasPlatform {\n  hasMask?: boolean;\n  alignY?: 'top' | 'center' | 'bottom';\n  alignX?: 'left' | 'center' | 'right';\n  closing?: boolean;\n}\n\nexport interface PopoutWrapperState {\n  opened: boolean;\n}\n\nexport type WindowTouchListener = (e: Event) => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nexport type ClickHandler = (e: MouseEvent<HTMLDivElement>) => void;\n\nclass PopoutWrapper extends Component<PopoutWrapperProps, PopoutWrapperState> {\n  constructor(props: PopoutWrapperProps) {\n    super(props);\n    this.state = {\n      opened: false,\n    };\n    this.elRef = React.createRef();\n  }\n\n  static defaultProps: PopoutWrapperProps = {\n    hasMask: true,\n    alignY: 'center',\n    alignX: 'center',\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('touchmove', this.preventTouch, { passive: false });\n      this.waitAnimationFinish(this.elRef.current, this.onFadeInEnd);\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n      window.removeEventListener('touchmove', this.preventTouch, { passive: false });\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  waitAnimationFinish(elem: HTMLDivElement, eventHandler: AnimationEndCallback) {\n    if (animationEvent.supported) {\n      elem.removeEventListener(animationEvent.name, eventHandler);\n      elem.addEventListener(animationEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.animationFinishTimeout);\n      this.animationFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID ? 200 : 300);\n    }\n  }\n\n  onFadeInEnd: AnimationEndCallback = (e: AnimationEvent) => {\n    if (!e || e.animationName === 'animation-full-fade-in') {\n      this.setState({ opened: true });\n    }\n  };\n\n  preventTouch: WindowTouchListener = (e: Event) => e.preventDefault();\n\n  render() {\n    const { alignY, alignX, closing, children, hasMask, className, platform, ...restProps } = this.props;\n    const baseClassNames = getClassName('PopoutWrapper', platform);\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(baseClassNames, `PopoutWrapper--v-${alignY}`, `PopoutWrapper--h-${alignX}`, {\n          'PopoutWrapper--closing': closing,\n          'PopoutWrapper--opened': this.state.opened,\n        }, className)}\n        ref={this.elRef}\n      >\n        {hasMask && <div className=\"PopoutWrapper__mask\" />}\n        <div className=\"PopoutWrapper__container\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(PopoutWrapper);\n"],"file":"PopoutWrapper.js"}