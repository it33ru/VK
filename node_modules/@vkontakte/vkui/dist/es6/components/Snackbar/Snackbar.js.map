{"version":3,"sources":["../../../../src/components/Snackbar/Snackbar.tsx"],"names":["React","PureComponent","PropTypes","withPlatform","FixedLayout","Touch","classNames","getClassname","canUseDOM","transitionEvent","ANDROID","rubber","Snackbar","props","closeTimeout","setTimeout","close","duration","clearTimeout","e","action","onActionClick","el","innerEl","clearCloseTimeout","event","shiftX","startT","originalEvent","preventDefault","state","touched","setState","shiftXPercent","window","innerWidth","shiftXCurrent","platform","touchStartTime","setBodyTransform","newState","callback","shiftXReal","expectTranslateY","Date","now","getTime","waitTransitionFinish","bodyElRef","current","onClose","setCloseTimeout","closing","createRef","element","eventHandler","supported","removeEventListener","name","addEventListener","transitionFinishTimeout","percent","cancelAnimationFrame","animationFrame","requestAnimationFrame","style","transform","children","className","layout","before","after","resolvedLayout","getInnerRef","onTouchStart","onTouchMoveX","onTouchEnd","context","any","document"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, PureComponent, MouseEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport withPlatform from '../../hoc/withPlatform';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Touch, { TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport { HasPlatform } from '../../types';\nimport getClassname from '../../helpers/getClassName';\nimport { canUseDOM } from '../../lib/dom';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { ANDROID } from '../../lib/platform';\nimport { rubber } from '../../lib/touch';\n\nexport interface SnackbarProps extends HTMLAttributes<HTMLElement>, HasPlatform {\n  /**\n   * Название кнопки действия в уведомлении\n   */\n  action?: string | React.ComponentType;\n\n  /**\n   * Будет вызвано при клике на кнопку действия\n   */\n  onActionClick?: (e: React.MouseEvent) => void;\n\n  /**\n   * Цветная иконка 24x24 пикселя\n   */\n  before?: React.ReactNode;\n  /**\n   * Контент в правой части, может быть `<Avatar size={32} />`\n   */\n  after?: React.ReactNode;\n  /**\n   * Варианты расположения кнопки\n   */\n  layout?: 'vertical' | 'horizontal';\n  /**\n   * Время в миллисекундах, через которое плашка скроется\n   */\n  duration?: number;\n  /**\n   * Обработчик закрытия уведомления\n   */\n  onClose: () => void;\n}\n\nexport interface SnackbarState {\n  closing: boolean;\n  touched: boolean;\n}\n\nclass Snackbar extends PureComponent<SnackbarProps, SnackbarState> {\n  constructor(props: SnackbarProps) {\n    super(props);\n\n    this.state = {\n      closing: false,\n      touched: false,\n    };\n\n    this.bodyElRef = React.createRef();\n\n    this.shiftXPercent = 0;\n    this.shiftXCurrent = 0;\n  }\n\n  static defaultProps = {\n    duration: 4000,\n  };\n\n  static contextTypes = {\n    window: PropTypes.any,\n    document: PropTypes.any,\n  };\n\n  private innerEl: HTMLDivElement;\n  private readonly bodyElRef: React.RefObject<HTMLDivElement>;\n\n  private shiftXPercent: number;\n  private shiftXCurrent: number;\n  private touchStartTime: Date;\n  private animationFrame: number;\n\n  private closeTimeout: ReturnType<typeof setTimeout>;\n  private transitionFinishTimeout: ReturnType<typeof setTimeout>;\n\n  componentDidMount() {\n    this.setCloseTimeout();\n  }\n\n  componentWillUnmount() {\n    this.clearCloseTimeout();\n  }\n\n  get window() {\n    return this.context.window || window;\n  }\n\n  setCloseTimeout = () => {\n    if (canUseDOM) {\n      this.closeTimeout = setTimeout(() => {\n        this.close();\n      }, this.props.duration);\n    }\n  };\n\n  clearCloseTimeout = () => {\n    clearTimeout(this.closeTimeout);\n  };\n\n  private readonly onActionClick = (e: MouseEvent) => {\n    this.close();\n\n    if (this.props.action && typeof this.props.onActionClick === 'function') {\n      this.props.onActionClick(e);\n    }\n  };\n\n  close() {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.innerEl, () => {\n      this.props.onClose();\n    });\n  }\n\n  waitTransitionFinish(element: HTMLElement, eventHandler: VoidFunction) {\n    if (element) {\n      if (transitionEvent.supported) {\n        element.removeEventListener(transitionEvent.name, eventHandler);\n        element.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.transitionFinishTimeout);\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID ? 400 : 320);\n      }\n    }\n  }\n\n  getInnerRef = (el: HTMLDivElement) => this.innerEl = el;\n\n  onTouchStart = () => {\n    this.clearCloseTimeout();\n  };\n\n  onTouchMoveX = (event: TouchEvent) => {\n    const { shiftX, startT, originalEvent } = event;\n    originalEvent.preventDefault();\n\n    if (!this.state.touched) {\n      this.setState({ touched: true });\n    }\n\n    this.shiftXPercent = shiftX / this.window.innerWidth * 100;\n    this.shiftXCurrent = rubber(this.shiftXPercent, 72, 1.2, this.props.platform === ANDROID);\n    this.touchStartTime = startT;\n\n    this.setBodyTransform(this.shiftXCurrent);\n  };\n\n  onTouchEnd = () => {\n    const newState = {\n      touched: false,\n    };\n\n    let callback;\n\n    if (this.state.touched) {\n      let shiftXReal = this.shiftXCurrent;\n      const expectTranslateY = shiftXReal / (Date.now() - this.touchStartTime.getTime()) * 240 * 0.6 * (this.shiftXPercent < 0 ? -1 : 1);\n      shiftXReal = shiftXReal + expectTranslateY;\n\n      if (shiftXReal >= 50) {\n        this.clearCloseTimeout();\n        this.waitTransitionFinish(this.bodyElRef.current, () => {\n          this.props.onClose();\n        });\n        this.setBodyTransform(120);\n      } else {\n        callback = () => {\n          this.setCloseTimeout();\n          this.setBodyTransform(0);\n        };\n      }\n    } else {\n      this.setCloseTimeout();\n    }\n\n    this.setState(newState, callback);\n  };\n\n  setBodyTransform(percent: number) {\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(() => {\n      this.bodyElRef.current.style.transform = `translate3d(${percent}%, 0, 0)`;\n    });\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      platform,\n      layout,\n      action,\n      before,\n      after,\n    } = this.props;\n\n    const resolvedLayout = after ? 'vertical' : layout;\n\n    return (\n      <FixedLayout\n        vertical=\"bottom\"\n        className={classNames(getClassname('Snackbar', platform), className, `Snackbar--l-${resolvedLayout}`, {\n          'Snackbar--closing': this.state.closing,\n          'Snackbar--touched': this.state.touched,\n        })}\n      >\n        <Touch\n          className=\"Snackbar__in\"\n          getRootRef={this.getInnerRef}\n          onStart={this.onTouchStart}\n          onMoveX={this.onTouchMoveX}\n          onEnd={this.onTouchEnd}\n        >\n          <div className=\"Snackbar__body\" ref={this.bodyElRef}>\n            {before &&\n            <div className=\"Snackbar__before\">\n              {before}\n            </div>}\n\n            <div className=\"Snackbar__content\">\n              <div className=\"Snackbar__content-text\">{children}</div>\n\n              {action &&\n              <button className=\"Snackbar__action\" onClick={this.onActionClick}>\n                <div className=\"Snackbar__action-self\">{action}</div>\n              </button>}\n            </div>\n\n            {after &&\n            <div className=\"Snackbar__after\">\n              {after}\n            </div>}\n          </div>\n        </Touch>\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withPlatform(Snackbar);\n"],"file":"Snackbar.js"}