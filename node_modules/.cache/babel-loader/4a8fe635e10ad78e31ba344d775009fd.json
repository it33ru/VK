{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addSpriteSymbol = addSpriteSymbol;\nexports.useIsomorphicLayoutEffect = void 0;\n\nvar _browserSprite = _interopRequireDefault(require(\"svg-baker-runtime/browser-sprite\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // @ts-ignore\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar browserSprite;\n\nif (canUseDOM) {\n  var spriteId = '__SVG_SPRITE_NODE__';\n  browserSprite = new _browserSprite.default({\n    attrs: {\n      id: spriteId\n    }\n  });\n\n  var mount = function mount() {\n    var spriteNode = document.getElementById(spriteId);\n\n    if (spriteNode) {\n      browserSprite.attach(spriteNode);\n    } else {\n      browserSprite.mount();\n    }\n  };\n\n  if (document.querySelector('body')) {\n    mount();\n  } else {\n    document.addEventListener('DOMContentLoaded', mount);\n  }\n} else {\n  browserSprite = null;\n}\n\nfunction addSpriteSymbol(symbol) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\n\nvar useIsomorphicLayoutEffect = canUseDOM ? _react.useLayoutEffect : _react.useEffect;\nexports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect;","map":{"version":3,"sources":["../tmp/sprite.ts"],"names":["canUseDOM","window","spriteId","browserSprite","BrowserSprite","attrs","id","mount","spriteNode","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect"],"mappings":";;;;;;;;AACA,IAAA,cAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;;;EAFA;;;AAIA,IAAMA,SAAS,GAAG,CAAC,EACjB,OAAA,MAAA,KAAA,WAAA,IACAC,MAAM,CADN,QAAA,IAEAA,MAAM,CAANA,QAAAA,CAHF,aAAmB,CAAnB;AAMA,IAAA,aAAA;;AAEA,IAAA,SAAA,EAAe;AACb,MAAMC,QAAQ,GAAd,qBAAA;AAEAC,EAAAA,aAAa,GAAG,IAAIC,cAAAA,CAAJ,OAAA,CAAkB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEJ;AAAN;AAAT,GAAlB,CAAhBC;;AAEA,MAAMI,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,QAAMC,UAAU,GAAGC,QAAQ,CAARA,cAAAA,CAAnB,QAAmBA,CAAnB;;AACA,QAAA,UAAA,EAAgB;AACdN,MAAAA,aAAa,CAAbA,MAAAA,CAAAA,UAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,aAAa,CAAbA,KAAAA;AACD;AANH,GAAA;;AASA,MAAIM,QAAQ,CAARA,aAAAA,CAAJ,MAAIA,CAAJ,EAAoC;AAClCF,IAAAA,KAAK;AADP,GAAA,MAEO;AACLE,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,kBAAAA,EAAAA,KAAAA;AACD;AAlBH,CAAA,MAmBO;AACLN,EAAAA,aAAa,GAAbA,IAAAA;AACD;;AAEM,SAAA,eAAA,CAAA,MAAA,EAAsC;AAC3C,MAAA,aAAA,EAAmB;AACjBA,IAAAA,aAAa,CAAbA,GAAAA,CAAAA,MAAAA;AACD;AACF;;AAEM,IAAMO,yBAAyB,GAAGV,SAAS,GAAGW,MAAAA,CAAH,eAAA,GAAqBC,MAAAA,CAAhE,SAAA","sourcesContent":["// @ts-ignore\nimport BrowserSprite from 'svg-baker-runtime/browser-sprite';\nimport { useLayoutEffect, useEffect } from 'react';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet browserSprite: BrowserSprite | null;\n\nif (canUseDOM) {\n  const spriteId = '__SVG_SPRITE_NODE__';\n\n  browserSprite = new BrowserSprite({ attrs: { id: spriteId } });\n\n  const mount = () => {\n    const spriteNode = document.getElementById(spriteId);\n    if (spriteNode) {\n      browserSprite.attach(spriteNode);\n    } else {\n      browserSprite.mount();\n    }\n  };\n\n  if (document.querySelector('body')) {\n    mount();\n  } else {\n    document.addEventListener('DOMContentLoaded', mount);\n  }\n} else {\n  browserSprite = null;\n}\n\nexport function addSpriteSymbol(symbol: any) {\n  if (browserSprite) {\n    browserSprite.add(symbol);\n  }\n}\n\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n"]},"metadata":{},"sourceType":"script"}