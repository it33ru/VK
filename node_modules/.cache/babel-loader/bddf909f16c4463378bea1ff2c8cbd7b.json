{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 12 12';\nvar id = 'lock_12';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 12\" id=\"lock_12\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h12v12H0z\" /><path fill=\"currentColor\" d=\"M3 5V3.497a3 3 0 016-.002V5h.539c.334 0 .455.035.577.1a.681.681 0 01.284.284c.065.122.1.243.1.577v4.078c0 .334-.035.455-.1.577a.681.681 0 01-.284.284c-.122.065-.243.1-.577.1H2.46c-.334 0-.455-.035-.577-.1a.681.681 0 01-.284-.284c-.065-.122-.1-.243-.1-.577V5.96c0-.334.035-.455.1-.577a.681.681 0 01.284-.284c.122-.065.243-.1.577-.1H3zm3-3a1.5 1.5 0 00-1.5 1.5V5h3V3.5A1.5 1.5 0 006 2z\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon12Lock = function Icon12Lock(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 12,\n    height: !isNaN(props.height) ? +props.height : 12\n  }));\n};\n\nIcon12Lock.mountIcon = mountIcon;\nexport default Icon12Lock;","map":{"version":3,"sources":["../../../tmp/12/lock.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon12Lock","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,SAAA;AACA,IAAMC,OAAO,GAAb,wjBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,UAA+B,GAAG,SAAlCA,UAAkC,CAAA,KAAA,EAAW;AACjDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,UAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,UAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 12 12';\nconst id = 'lock_12';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 12\" id=\"lock_12\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h12v12H0z\" /><path fill=\"currentColor\" d=\"M3 5V3.497a3 3 0 016-.002V5h.539c.334 0 .455.035.577.1a.681.681 0 01.284.284c.065.122.1.243.1.577v4.078c0 .334-.035.455-.1.577a.681.681 0 01-.284.284c-.122.065-.243.1-.577.1H2.46c-.334 0-.455-.035-.577-.1a.681.681 0 01-.284-.284c-.065-.122-.1-.243-.1-.577V5.96c0-.334.035-.455.1-.577a.681.681 0 01.284-.284c.122-.065.243-.1.577-.1H3zm3-3a1.5 1.5 0 00-1.5 1.5V5h3V3.5A1.5 1.5 0 006 2z\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon12LockProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon12Lock: FC<Icon12LockProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 12,\n    height: !isNaN(props.height) ? +props.height : 12,\n  }));\n};\n\n(Icon12Lock as any).mountIcon = mountIcon;\n\nexport default Icon12Lock;\n"]},"metadata":{},"sourceType":"module"}