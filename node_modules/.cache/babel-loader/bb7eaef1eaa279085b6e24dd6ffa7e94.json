{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport Separator from '../Separator/Separator';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\n\nvar Group = function Group(props) {\n  var header = props.header,\n      description = props.description,\n      className = props.className,\n      children = props.children,\n      separator = props.separator,\n      getRootRef = props.getRootRef,\n      restProps = _objectWithoutProperties(props, [\"header\", \"description\", \"className\", \"children\", \"separator\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n  var baseClassNames = getClassName('Group', platform);\n  return /*#__PURE__*/React.createElement(\"section\", _extends({}, restProps, {\n    ref: getRootRef,\n    className: classNames(baseClassNames, className)\n  }), header, children, hasReactNode(description) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Group__description\"\n  }, /*#__PURE__*/React.createElement(Caption, {\n    weight: \"regular\",\n    level: \"1\"\n  }, description)), separator !== 'hide' && /*#__PURE__*/React.createElement(Separator, {\n    className: classNames('Group__separator', {\n      'Group__separator--force': separator === 'show'\n    })\n  }));\n};\n\nGroup.defaultProps = {\n  separator: 'auto'\n};\nexport default Group;","map":{"version":3,"sources":["../../../../src/components/Group/Group.tsx"],"names":["Group","header","description","className","children","separator","getRootRef","restProps","props","platform","usePlatform","baseClassNames","getClassName","classNames","hasReactNode"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AAEA,OAAA,WAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;;AAaA,IAAMA,KAAqB,GAAG,SAAxBA,KAAwB,CAAA,KAAA,EAAW;AAAA,MAC/BC,MAD+B,GACmDO,KADnD,CAAA,MAAA;AAAA,MACvBN,WADuB,GACmDM,KADnD,CAAA,WAAA;AAAA,MACVL,SADU,GACmDK,KADnD,CAAA,SAAA;AAAA,MACCJ,QADD,GACmDI,KADnD,CAAA,QAAA;AAAA,MACWH,SADX,GACmDG,KADnD,CAAA,SAAA;AAAA,MACsBF,UADtB,GACmDE,KADnD,CAAA,UAAA;AAAA,MACqCD,SADrC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,YAAA,CAAA,CAAA;;AAEvC,MAAME,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,cAAc,GAAGC,YAAY,CAAA,OAAA,EAAnC,QAAmC,CAAnC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAwB,IAAA,GAAG,EAA3B,UAAA;AAAyC,IAAA,SAAS,EAAEC,UAAU,CAAA,cAAA,EAAA,SAAA;AAA9D,GAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAGGC,YAAY,CAAZA,WAAY,CAAZA,IAAAA,aACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,IAAA,MAAM,EAAf,SAAA;AAA0B,IAAA,KAAK,EAAC;AAAhC,GAAA,EALJ,WAKI,CADF,CAJF,EAQGT,SAAS,KAATA,MAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,IAAA,SAAS,EAAEQ,UAAU,CAAA,kBAAA,EAAqB;AACnD,iCAA2BR,SAAS,KAAK;AADU,KAArB;AAAhC,GAAA,CATJ,CADF;AALF,CAAA;;AAuBAL,KAAK,CAALA,YAAAA,GAAqB;AACnBK,EAAAA,SAAS,EAAE;AADQ,CAArBL;AAIA,eAAA,KAAA","sourcesContent":["import React, { FC, HTMLAttributes, ReactNode } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasRootRef } from '../../types';\nimport usePlatform from '../../hooks/usePlatform';\nimport Separator from '../Separator/Separator';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\n\nexport interface GroupProps extends HasRootRef<HTMLDivElement>, HTMLAttributes<HTMLDivElement> {\n  header?: ReactNode;\n  description?: ReactNode;\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  separator?: 'show' | 'hide' | 'auto';\n}\n\nconst Group: FC<GroupProps> = (props) => {\n  const { header, description, className, children, separator, getRootRef, ...restProps } = props;\n  const platform = usePlatform();\n  const baseClassNames = getClassName('Group', platform);\n\n  return (\n    <section {...restProps} ref={getRootRef} className={classNames(baseClassNames, className)}>\n      {header}\n      {children}\n      {hasReactNode(description) &&\n      <div className=\"Group__description\">\n        <Caption weight=\"regular\" level=\"1\">{description}</Caption>\n      </div>\n      }\n      {separator !== 'hide' &&\n        <Separator className={classNames('Group__separator', {\n          'Group__separator--force': separator === 'show',\n        })} />\n      }\n    </section>\n  );\n};\n\nGroup.defaultProps = {\n  separator: 'auto',\n};\n\nexport default Group;\n"]},"metadata":{},"sourceType":"module"}