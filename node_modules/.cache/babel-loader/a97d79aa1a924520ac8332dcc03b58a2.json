{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { createMasks } from './masks';\nimport { useBrowserInfo } from '../../hooks/useBrowserInfo';\nimport { IOS } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\n\nvar UsersStack = function UsersStack(props) {\n  var _useBrowserInfo = useBrowserInfo(),\n      platform = _useBrowserInfo.platform,\n      platformVersion = _useBrowserInfo.platformVersion;\n\n  var className = props.className,\n      photos = props.photos,\n      visibleCount = props.visibleCount,\n      size = props.size,\n      layout = props.layout,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, [\"className\", \"photos\", \"visibleCount\", \"size\", \"layout\", \"children\"]);\n\n  useIsomorphicLayoutEffect(function () {\n    createMasks();\n  }, []);\n  var othersCount = Math.max(0, photos.length - visibleCount);\n  var canShowOthers = othersCount > 0 && size === 'm';\n  var photosShown = photos.slice(0, visibleCount);\n  var canUseClipPath = true;\n\n  if (platform === IOS) {\n    canUseClipPath = platformVersion && platformVersion.major >= 12;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(getClassName('UsersStack', platform), className, \"UsersStack--size-\".concat(size), \"UsersStack--l-\".concat(layout), {\n      'UsersStack--others': canShowOthers,\n      'UsersStack--simple': !canUseClipPath\n    })\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"UsersStack__photos\"\n  }, photosShown.map(function (photo, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"UsersStack__photo\",\n      style: {\n        backgroundImage: \"url(\".concat(photo, \")\")\n      }\n    });\n  }), canShowOthers && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('UsersStack__photo', 'UsersStack__photo--others')\n  }, \"+\".concat(othersCount))), children && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"UsersStack__text\"\n  }, children));\n};\n\nUsersStack.defaultProps = {\n  photos: [],\n  size: 's',\n  visibleCount: 3,\n  layout: 'horizontal'\n};\nexport default /*#__PURE__*/React.memo(UsersStack);","map":{"version":3,"sources":["../../../../src/components/UsersStack/UsersStack.tsx"],"names":["UsersStack","platform","platformVersion","useBrowserInfo","className","photos","visibleCount","size","layout","children","restProps","props","useIsomorphicLayoutEffect","createMasks","othersCount","Math","canShowOthers","photosShown","canUseClipPath","classNames","getClassName","backgroundImage","React"],"mappings":"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","sourcesContent":["import React, { FC, HTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { createMasks } from './masks';\nimport { useBrowserInfo } from '../../hooks/useBrowserInfo';\nimport { IOS } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\n\nexport interface UsersStackProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Массив ссылок на фотографии\n   */\n  photos?: string[];\n  /**\n   * Размер аватарок\n   */\n  size?: 's' | 'm';\n  /**\n   * Вертикальный режим рекомендуется использовать с размером `m`\n   */\n  layout?: 'vertical' | 'horizontal';\n  /**\n   * Количество аватарок, которые будут показаны.\n   * Если в массиве `photos` больше элементов и используется размер `m`, то будет показано количество остальных элементов\n   */\n  visibleCount?: number;\n}\n\nconst UsersStack: FC<UsersStackProps> = (props) => {\n  const { platform, platformVersion } = useBrowserInfo();\n  const { className, photos, visibleCount, size, layout, children, ...restProps } = props;\n\n  useIsomorphicLayoutEffect(() => {\n    createMasks();\n  }, []);\n\n  const othersCount = Math.max(0, photos.length - visibleCount);\n  const canShowOthers = othersCount > 0 && size === 'm';\n\n  const photosShown = photos.slice(0, visibleCount);\n\n  let canUseClipPath = true;\n  if (platform === IOS) {\n    canUseClipPath = platformVersion && platformVersion.major >= 12;\n  }\n\n  return (\n    <div\n      {...restProps}\n      className={\n        classNames(\n          getClassName('UsersStack', platform),\n          className,\n          `UsersStack--size-${size}`,\n          `UsersStack--l-${layout}`,\n          {\n            'UsersStack--others': canShowOthers,\n            'UsersStack--simple': !canUseClipPath,\n          },\n        )\n      }\n    >\n      <div className=\"UsersStack__photos\">\n        {photosShown.map((photo, i) => {\n          return (\n            <div\n              key={i}\n              className=\"UsersStack__photo\"\n              style={{ backgroundImage: `url(${photo})` }}\n            />\n          );\n        })}\n\n        {canShowOthers &&\n        <div className={classNames('UsersStack__photo', 'UsersStack__photo--others')}>\n          {`+${othersCount}`}\n        </div>}\n      </div>\n      {children &&\n      <div className=\"UsersStack__text\">\n        {children}\n      </div>\n      }\n    </div>\n  );\n};\n\nUsersStack.defaultProps = {\n  photos: [],\n  size: 's',\n  visibleCount: 3,\n  layout: 'horizontal',\n};\n\nexport default React.memo(UsersStack);\n"]},"metadata":{},"sourceType":"module"}