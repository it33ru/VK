{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nvar baseClassName = getClassName('Counter');\n\nvar Counter = function Counter(props) {\n  var mode = props.mode,\n      size = props.size,\n      children = props.children,\n      className = props.className,\n      restProps = _objectWithoutProperties(props, [\"mode\", \"size\", \"children\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(className, baseClassName, \"Counter--\".concat(mode), \"Counter--s-\".concat(size))\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Counter__in\"\n  }, children));\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm'\n};\nexport default /*#__PURE__*/React.memo(Counter);","map":{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["baseClassName","getClassName","Counter","mode","size","children","className","restProps","props","classNames","React"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AAEA,IAAMA,aAAa,GAAGC,YAAY,CAAlC,SAAkC,CAAlC;;AAUA,IAAMC,OAA8C,GAAG,SAAjDA,OAAiD,CAAA,KAAA,EAAyB;AAAA,MACtEC,IADsE,GACpBK,KADoB,CAAA,IAAA;AAAA,MAChEJ,IADgE,GACpBI,KADoB,CAAA,IAAA;AAAA,MAC1DH,QAD0D,GACpBG,KADoB,CAAA,QAAA;AAAA,MAChDF,SADgD,GACpBE,KADoB,CAAA,SAAA;AAAA,MAClCD,SADkC,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AAG9E,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEE,UAAU,CAAA,SAAA,EAAA,aAAA,EAAA,YAAA,MAAA,CAAA,IAAA,CAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA;AAFvB,GAAA,CAAA,EAAA,aAIE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EALJ,QAKI,CAJF,CADF;AAHF,CAAA;;AAeAP,OAAO,CAAPA,YAAAA,GAAuB;AACrBC,EAAAA,IAAI,EADiB,WAAA;AAErBC,EAAAA,IAAI,EAAE;AAFe,CAAvBF;AAKA,eAAA,aAAeQ,KAAK,CAALA,IAAAA,CAAf,OAAeA,CAAf","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\n\nconst baseClassName = getClassName('Counter');\n\nexport interface CounterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\nconst Counter: React.FunctionComponent<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, className, ...restProps } = props;\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(className, baseClassName, `Counter--${mode}`, `Counter--s-${size}`)}\n    >\n      <div className=\"Counter__in\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"]},"metadata":{},"sourceType":"module"}